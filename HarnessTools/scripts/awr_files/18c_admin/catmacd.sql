Rem
Rem
Rem Copyright (c) 2004, 2017, Oracle and/or its affiliates. 
Rem All rights reserved.
Rem    NAME
Rem      catmacd.sql
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the code$ table.
Rem
Rem    NOTES
Rem      To re-load
Rem      delete identity_map$;
Rem      delete command_rule$
Rem      delete code$
Rem      
Rem      001 - 299   octdef command codes
Rem      300 - 399   Data Vault command codes that are not in octdef.h
Rem      400+        Data Vault specific codes
Rem
Rem
Rem BEGIN SQL_FILE_METADATA
Rem SQL_SOURCE_FILE: rdbms/admin/catmacd.sql
Rem SQL_SHIPPED_FILE: rdbms/admin/catmacd.sql
Rem SQL_PHASE: CATMACD
Rem SQL_STARTUP_MODE: NORMAL
Rem SQL_IGNORABLE_ERRORS: NONE
Rem SQL_CALLING_FILE: rdbms/admin/catmac.sql
Rem END SQL_FILE_METADATA
Rem
Rem
Rem    MODIFIED (MM/DD/YY)
Rem    jibyun     08/22/17 - Bug 26612996: CSW_USR_ROLE ans SPATIAL_CSW_ADMIN
Rem                          roles are deprecated in 18.1
Rem    jibyun     06/23/17 - Bug 26338289: remove realm protection for the 
Rem                          JAVA_DEPLOY role (deprecated)
Rem    yapli      04/25/17 - lrg 19613052: Add DATAPATCH_ROLE to Oracle System
Rem                          Privilege and Role Management Realm
Rem    qinwu      01/19/17 - proj 70151: add DV audit for db capture and replay
Rem    dalpern    10/15/16 - bug 22665467: add DV checks on DEBUG [CONNECT]
Rem    sanbhara   06/20/16 - Bug 23606093 - adding
Rem                          APPLICATION_TRACE_VIEWER,DBJAVASCRIPT,RDFCTX_ADMIN
Rem                          to DV realms.
Rem    kaizhuan   04/19/16 - Bug 22751770: rename function 
Rem                          current_container_scope to get_required_scope
Rem    youyang    04/13/16 - bug22865694: move ras roles to system privilege
Rem                          and roles realm
Rem    yapli      03/02/16 - Bug 22840314: Change training api to simulation
Rem    jibyun     02/15/16 - Bug 22296366: Add public synonyms for DVSYS
Rem                          objects to the Oracle Database Vault realm
Rem    youyang    02/12/16 - bug22672722:add audit for index functions
Rem    sanbhara   02/02/16 - Bug 22584525 - adding new rule for Alter System
Rem                          Dump command rule to allow dump of segment
Rem                          headers.
Rem    sanbhara   01/11/16 - Removing recyclebin related DV policies.
Rem    jibyun     11/01/15 - add DIAGNOSTIC authorization audit
Rem    gaurameh   10/27/15 - Bug 21045941: allow
Rem                          CURSOR_BIND_CAPTURE_DESTINATION to be altered
Rem    kaizhuan   09/21/15 - Bug 21609808: Remove rule set 20 which is not
Rem                          used by any default command rules
Rem    yapli      08/14/15 - Bug 20588540: Protect new Oracle supplied roles
Rem    jibyun     07/13/15 - Bug 21438955: initialize realm_type of default
Rem                          realms
Rem    namoham    06/16/15 - Bug 20216779: make catmacd runnable in upgrade
Rem    yapli      05/27/15 - Bug 21143678: Change identifier declaration to 128
Rem    kaizhuan   05/07/15 - Bug 20984533: Remove command rule protection on
Rem                          init parameter O7_DICTIONARY_ACCESSIBILITY
Rem    mjgreave   03/23/15 - Bug 20284345: disallow change of LOG_ARCHIVE_TRACE 
Rem                          and LOG_ARCHIVE_MIN_SUCCEED_DEST
Rem    msoudaga   02/23/15 - Bug 16028065: Remove role DELETE_CATALOG_ROLE
Rem    kaizhuan   02/09/15 - Bug 20313334: Update rules 3, 4, 5, 6, 7 with new 
Rem                          function role_granted_enabled_varchar.
Rem    jibyun     01/22/15 - Bug 20398212: long identifier support
Rem    namoham    01/13/15 - Bug 20282732: add DV support for FLASHBACK TABLE
Rem    namoham    12/10/14 - Project 36761: support maintenance authorization
Rem    kaizhuan   11/21/14 - Project 46812: Support command rule fine grained 
Rem                          level protection for ALTER SYSTEM/SESSION
Rem    jibyun     11/17/14 - Project 46812: support TRAINING mode
Rem    yapli      11/04/14 - Bug 19252338: Adding new default factors
Rem    jibyun     08/16/14 - Project 46812: support for Database Vault policy
Rem    namoham    07/11/14 - Bug 19127377: add PREPROCESSOR authorization audit
Rem    jibyun     06/12/14 - Bug 18745788: add the CONNECT role to Oracle
Rem                          System Privilege and Role Management Realm as a
Rem                          protected object
Rem    jibyun     05/21/14 - Bug 18733351: Enhance EUS support for DV roles
Rem    aketkar    04/29/14 - sql patch metadata seed
Rem    jibyun     07/17/13 - Bug 17173422: do not insert non-existing schemas
Rem                          to realm_object$
Rem    kaizhuan   02/01/13 - Bug 15943291: Add DV protection on role AUDIT_VIEW
Rem                          and AUDIT_VIEWER.
Rem    youyang    10/12/12 - Bug14757586: add support for alter session
Rem    sanbhara   09/24/12 - Bug 14642504 - cleaning up realm_object$ metadata.
Rem    yanchuan   08/31/12 - bug 14456083: add TTS authorization audit code,
Rem                          add DV_DATAPUMP_NETWORK_LINK role
Rem    kaizhuan   08/16/12 - Bug 13689262: DV supports create/alter/drop
Rem                          pluggable database commands.
Rem    kaizhuan   07/11/12 - Bug 8420170: Clean up commands and object types
Rem                          which are not supported by DV from code$ and 
Rem                          code_t$ tables.
Rem    youyang    03/13/12 - bug10088587:add DDL authorization
Rem    jibyun     03/12/12 - Bug 13728213: add disable_dv_dictionary_accts,
Rem                          and enable_dv_dictionary_accts
Rem    jibyun     03/15/12 - Bug 5918695: introduce DV_AUDIT_CLEANUP role
Rem    youyang    01/07/12 - add proxy user dv authorization auditing code
Rem    sanbhara   02/14/12 - Bug 13643954 - adding new audit codes for Command
Rem                          rule violaton.
Rem    kaizhuan   01/13/11 - Bug 13584890: Translation standard viloation, 
Rem                          Remove ALLCAPS reserved key words from code.dlf
Rem                          and add them back to the code_t$ table here
Rem    srtata     12/26/11 - add DBA_OLS_STATUS to the system privilege and
Rem                          role management realm
Rem    kaizhuan   12/06/11 - Bug 10253750: Remove SYSMAN schema, MGMT_VIEW and M
Rem                          GMT_USER roles from EM realm. Delete SYSMAN, MGMT_V
Rem                          IEW, and MGMT_USER related insert SQL commands.
Rem    sanbhara   11/16/11 - Bug 13398113 - adding codes for Oradebug
Rem                          enalbe/disable.
Rem    savallu    09/15/11 - p#(autodop_31271): Add optimizer_processing_rate
Rem                          role to Database Vault realm
Rem    sanbhara   08/11/11 - Project 24121 - updating the command rules to be
Rem                          enabled by default.
Rem    sanbhara   07/26/11 - Project 24123 - adding new Audit_Events in code$
Rem                          table.
Rem    sanbhara   06/20/11 - Project 24121 - Replacing ODD realm with 3 smaller
Rem                          realms.
Rem    youyang    04/26/11 - change name to id
Rem    youyang    06/01/11 - bug 12395489:change password rule
Rem    jibyun     04/13/11 - Bug 12356827: Add DV_GOLDENGATE_REDO_ACCESS role
Rem                          to Database Vault realm
Rem    jibyun     02/18/11 - Bug 11662436: Add DV_XSTREAM_ADMIN role to
Rem                          Database Vault realm
Rem    jibyun     02/10/11 - Bug 11662436: Add DV_GOLDENGATE_ADMIN role to
Rem                          Database Vault realm
Rem    sanbhara   01/31/11 - Bug Fix 10225918.
Rem    dvekaria   01/07/11 - Bug 9068994 Inc new rule for DROP USER.
Rem    jheng      12/04/10 - remove ruleset "Allow Scheduler Job" & 
Rem                          "Allow Oracle Data Pump Operation"
Rem    jheng      09/30/10 - Bug 10155812: disable ALTER SYSTEM command rule
Rem    jheng      08/02/10 - remove insert into mac_policy$
Rem    sanbhara   07/08/10 - bug9871112: remove upper from factors
Rem    vigaur     05/25/10 - Bug 6503742
Rem    vigaur     12/10/09 - Bug 8706788 - Remove WKSYS and WKUSER from ODD
Rem                          Cleanup commented metadata inserts for unused
Rem                          schemas
Rem    jheng      12/01/09 - fix bug 9092184
Rem    youyang    09/29/09 - Bug8635726: add change password to code$
Rem    jheng      01/14/09 - add ruleset "Allow Scheduler Job"
Rem    ruparame   12/18/08 - Bug 7657506
Rem    clei       12/10/08 - DV_PATCH -> DV_PATCH_ADMIN
Rem    youyang    10/31/08 - Change owner of roles to % when adding to realm
Rem    jibyun     05/09/08 - Bug 7550987: Add DV_STREAMS_ADMIN role to
Rem                          Oracle Database Vault realm
Rem    jsamuel    11/06/08 - use anonymous blocks to limit error msgs
Rem    ssonawan   09/25/08 - Bug 6938843: Add rules for alter system command 
Rem    jheng      10/17/08 - Remove GRANT and REVOKE default cmd rules
Rem    jsamuel    10/01/08 - simplfy patching
Rem    ruparame   08/19/08 - Bug 7319691: Create DV_MONITOR role
Rem    clei       09/09/08 - Bug 6435192: Add DV protected role DV_PATCH.
Rem    ruparame   04/01/08 - Add new rule set for datapump
Rem    ifitzger   05/30/07 - bug fix 6062609: add wksys & wkuser 
Rem    ruparame   02/15/07 - Adding edition data to metadata table
Rem    rvissapr   12/01/06 - move DV function creation based on seed to
Rem                          catmact.sql
Rem    clei       12/17/06 - seed Materialized View in DB_OBJECT_TYPE
Rem    cchui      06/27/06 - seed cmd rules to protect parameter 
Rem                          vulnerabilities 
Rem    fjlee      05/06/06 - merge 060502 updates 
Rem    jciminsk   05/02/06 - cleanup embedded file boilerplate 
Rem    jciminsk   05/02/06 - created admin/catmacd.sql 
Rem    sgaetjen   04/12/06 - remove MAC and remove unsupported oct codes 
Rem    tchorma    01/12/06 - Code for PL/SQL Exeecute 
Rem    sgaetjen   02/22/06 - XbranchMerge sgaetjen_dvopt2 from 
Rem                          st_rdbms_10.2audit 
Rem    sgaetjen   02/08/06 - add select and DML 
Rem    sgaetjen   11/07/05 - NLS Support
Rem    sgaetjen   10/31/05 - change fail options
Rem    sgaetjen   10/04/05 - added factor not labled error message
Rem    sgaetjen   08/11/05 - sgaetjen_dvschema
Rem    sgaetjen   08/08/05 - Removed demo data for first QA round
Rem    sgaetjen   07/28/05 - dos2unix
Rem    sgaetjen   10/18/04 - Created
Rem
Rem
Rem


@@?/rdbms/admin/sqlsessstart.sql

--The following contains all the inserts into DVSYS.CODE$
BEGIN 
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(1,'SQL_CMDS','CREATE TABLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(2,'SQL_CMDS','INSERT',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(3,'SQL_CMDS','SELECT',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(4,'SQL_CMDS','CREATE CLUSTER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(5,'SQL_CMDS','ALTER CLUSTER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(6,'SQL_CMDS','UPDATE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(7,'SQL_CMDS','DELETE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(8,'SQL_CMDS','DROP CLUSTER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(9,'SQL_CMDS','CREATE INDEX',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(10,'SQL_CMDS','DROP INDEX',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(11,'SQL_CMDS','ALTER INDEX',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(12,'SQL_CMDS','DROP TABLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(13,'SQL_CMDS','CREATE SEQUENCE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(14,'SQL_CMDS','ALTER SEQUENCE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(15,'SQL_CMDS','ALTER TABLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(16,'SQL_CMDS','DROP SEQUENCE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(17,'SQL_CMDS','GRANT',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(18,'SQL_CMDS','REVOKE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(19,'SQL_CMDS','CREATE SYNONYM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(20,'SQL_CMDS','DROP SYNONYM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(21,'SQL_CMDS','CREATE VIEW',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(22,'SQL_CMDS','DROP VIEW',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(23,'SQL_CMDS','VALIDATE INDEX',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(24,'SQL_CMDS','CREATE PROCEDURE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(25,'SQL_CMDS','ALTER PROCEDURE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(26,'SQL_CMDS','LOCK TABLE',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(27,'SQL_CMDS','NO OPERATION',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(28,'SQL_CMDS','RENAME',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(29,'SQL_CMDS','COMMENT',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(30,'SQL_CMDS','AUDIT',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(31,'SQL_CMDS','NOAUDIT',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(32,'SQL_CMDS','CREATE DATABASE LINK',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(33,'SQL_CMDS','DROP DATABASE LINK',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(34,'SQL_CMDS','CREATE DATABASE',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(35,'SQL_CMDS','ALTER DATABASE',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(36,'SQL_CMDS','CREATE ROLLBACK SEGMENT',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(37,'SQL_CMDS','ALTER ROLLBACK SEGMENT',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(38,'SQL_CMDS','DROP ROLLBACK SEGMENT',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(39,'SQL_CMDS','CREATE TABLESPACE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(40,'SQL_CMDS','ALTER TABLESPACE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(41,'SQL_CMDS','DROP TABLESPACE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(42,'SQL_CMDS','ALTER SESSION',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(43,'SQL_CMDS','ALTER USER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(44,'SQL_CMDS','COMMIT',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(45,'SQL_CMDS','ROLLBACK',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(46,'SQL_CMDS','SAVEPOINT',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(47,'SQL_CMDS','EXECUTE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(48,'SQL_CMDS','SET TRANSACTION',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(49,'SQL_CMDS','ALTER SYSTEM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(50,'SQL_CMDS','EXPLAIN',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(51,'SQL_CMDS','CREATE USER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(52,'SQL_CMDS','CREATE ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(53,'SQL_CMDS','DROP USER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(54,'SQL_CMDS','DROP ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(55,'SQL_CMDS','SET ROLE',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(56,'SQL_CMDS','CREATE SCHEMA',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(57,'SQL_CMDS','CREATE CONTROLFILE',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(58,'SQL_CMDS','ALTER TRACING',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(59,'SQL_CMDS','CREATE TRIGGER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(60,'SQL_CMDS','ALTER TRIGGER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(61,'SQL_CMDS','DROP TRIGGER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(62,'SQL_CMDS','ANALYZE TABLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(63,'SQL_CMDS','ANALYZE INDEX',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(64,'SQL_CMDS','ANALYZE CLUSTER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(65,'SQL_CMDS','CREATE PROFILE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(66,'SQL_CMDS','DROP PROFILE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(67,'SQL_CMDS','ALTER PROFILE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(68,'SQL_CMDS','DROP PROCEDURE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(70,'SQL_CMDS','ALTER RESOURCE COST',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(71,'SQL_CMDS','CREATE MATERIALIZED VIEW LOG',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(72,'SQL_CMDS','ALTER MATERIALIZED VIEW LOG',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(73,'SQL_CMDS','DROP MATERIALIZED VIEW LOG',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(74,'SQL_CMDS','CREATE MATERIALIZED VIEW',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(75,'SQL_CMDS','ALTER MATERIALIZED VIEW',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(76,'SQL_CMDS','DROP MATERIALIZED VIEW',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(77,'SQL_CMDS','CREATE TYPE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(78,'SQL_CMDS','DROP TYPE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(79,'SQL_CMDS','ALTER ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(80,'SQL_CMDS','ALTER TYPE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(81,'SQL_CMDS','CREATE TYPE BODY',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(82,'SQL_CMDS','ALTER TYPE BODY',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(83,'SQL_CMDS','DROP TYPE BODY',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(84,'SQL_CMDS','DROP LIBRARY',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(85,'SQL_CMDS','TRUNCATE TABLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(86,'SQL_CMDS','TRUNCATE CLUSTER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(87,'SQL_CMDS','CREATE BITMAPFILE',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(88,'SQL_CMDS','ALTER VIEW',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(89,'SQL_CMDS','DROP BITMAPFILE',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(90,'SQL_CMDS','SET CONSTRAINTS',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(91,'SQL_CMDS','CREATE FUNCTION',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(92,'SQL_CMDS','ALTER FUNCTION',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(93,'SQL_CMDS','DROP FUNCTION',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(94,'SQL_CMDS','CREATE PACKAGE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(95,'SQL_CMDS','ALTER PACKAGE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(96,'SQL_CMDS','DROP PACKAGE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(97,'SQL_CMDS','CREATE PACKAGE BODY',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(98,'SQL_CMDS','ALTER PACKAGE BODY',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(99,'SQL_CMDS','DROP PACKAGE BODY',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(157,'SQL_CMDS','CREATE DIRECTORY',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(158,'SQL_CMDS','DROP DIRECTORY',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(159,'SQL_CMDS','CREATE LIBRARY',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(160,'SQL_CMDS','CREATE JAVA',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(161,'SQL_CMDS','ALTER JAVA',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(162,'SQL_CMDS','DROP JAVA',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(163,'SQL_CMDS','CREATE OPERATOR',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(164,'SQL_CMDS','CREATE INDEXTYPE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(165,'SQL_CMDS','DROP INDEXTYPE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(166,'SQL_CMDS','ALTER INDEXTYPE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(167,'SQL_CMDS','DROP OPERATOR',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(168,'SQL_CMDS','ASSOCIATE STATISTICS',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(169,'SQL_CMDS','DISASSOCIATE STATISTICS',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(170,'SQL_CMDS','CALL',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(171,'SQL_CMDS','CREATE SUMMARY',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(172,'SQL_CMDS','ALTER SUMMARY',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(173,'SQL_CMDS','DROP SUMMARY',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(174,'SQL_CMDS','CREATE DIMENSION',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(175,'SQL_CMDS','ALTER DIMENSION',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(176,'SQL_CMDS','DROP DIMENSION',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(177,'SQL_CMDS','CREATE CONTEXT',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(178,'SQL_CMDS','DROP CONTEXT',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(179,'SQL_CMDS','ALTER OUTLINE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(180,'SQL_CMDS','CREATE OUTLINE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(181,'SQL_CMDS','DROP OUTLINE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(183,'SQL_CMDS','ALTER OPERATOR',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(187,'SQL_CMDS','CREATE SPFILE',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(188,'SQL_CMDS','CREATE PFILE',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(189,'SQL_CMDS','MERGE',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(190,'SQL_CMDS','CHANGE PASSWORD',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(191,'SQL_CMDS','UPDATE JOIN INDEX',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(192,'SQL_CMDS','ALTER SYNONYM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(193,'SQL_CMDS','ALTER DISKGROUP',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(194,'SQL_CMDS','CREATE DISKGROUP',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(195,'SQL_CMDS','DROP DISKGROUP',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(196,'SQL_CMDS','ALTER LIBRARY',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(197,'SQL_CMDS','PURGE RECYCLEBIN',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(198,'SQL_CMDS','PURGE DBA_RECYCLEBIN',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(199,'SQL_CMDS','PURGE TABLESPACE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(200,'SQL_CMDS','PURGE TABLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(201,'SQL_CMDS','PURGE INDEX',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(202,'SQL_CMDS','UNDROP OBJECT',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(203,'SQL_CMDS','DROP DATABASE',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(204,'SQL_CMDS','FLASHBACK DATABASE',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(205,'SQL_CMDS','FLASHBACK TABLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(206,'SQL_CMDS','CREATE RESTORE POINT',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(207,'SQL_CMDS','DROP RESTORE POINT',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(209,'SQL_CMDS','DECLARE REWRITE EQUIVALENCE',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(210,'SQL_CMDS','ALTER REWRITE EQUIVALENCE',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(211,'SQL_CMDS','DROP REWRITE EQUIVALENCE',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(212,'SQL_CMDS','CREATE EDITION',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(213,'SQL_CMDS','ALTER EDITION',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(214,'SQL_CMDS','DROP EDITION',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(218,'SQL_CMDS','CREATE FLASHBACK ARCHIVE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(219,'SQL_CMDS','ALTER FLASHBACK ARCHIVE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(220,'SQL_CMDS','DROP FLASHBACK ARCHIVE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(225,'SQL_CMDS','ALTER DATABASE LINK',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(226,'SQL_CMDS','CREATE PLUGGABLE DATABASE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(227,'SQL_CMDS','ALTER PLUGGABLE DATABASE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(228,'SQL_CMDS','DROP PLUGGABLE DATABASE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(300,'SQL_CMDS','CONNECT',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(301,'SQL_CMDS','DISCONNECT',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(400,'AUDIT_EVENTS','10000',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(401,'AUDIT_EVENTS','10001',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(402,'AUDIT_EVENTS','10002',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(403,'AUDIT_EVENTS','10003',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(404,'AUDIT_EVENTS','10004',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(405,'AUDIT_EVENTS','10005',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(406,'AUDIT_EVENTS','10006',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(407,'AUDIT_EVENTS','10007',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(408,'AUDIT_EVENTS','10008',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(409,'AUDIT_EVENTS','10009',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(410,'AUDIT_EVENTS','10010',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(411,'BOOLEAN','Y',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(412,'BOOLEAN','N',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(413,'FACTOR_AUDIT','0',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(414,'FACTOR_AUDIT','1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(415,'FACTOR_AUDIT','2',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(416,'FACTOR_AUDIT','4',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(417,'FACTOR_AUDIT','8',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(418,'FACTOR_AUDIT','16',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(419,'FACTOR_AUDIT','32',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(420,'FACTOR_AUDIT','64',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(421,'FACTOR_FAIL','1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(422,'FACTOR_FAIL','2',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(423,'FACTOR_IDENTIFY','0',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(424,'FACTOR_IDENTIFY','1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(425,'FACTOR_IDENTIFY','2',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(427,'FACTOR_EVALUATE','0',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(428,'FACTOR_EVALUATE','1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(430,'FACTOR_LABEL','0',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(431,'FACTOR_LABEL','1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(432,'RULESET_AUDIT','0',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(433,'RULESET_AUDIT','1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(434,'RULESET_AUDIT','2',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(435,'RULESET_EVALUATE','1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(436,'RULESET_EVALUATE','2',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(437,'RULESET_FAIL','1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(438,'RULESET_FAIL','2',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(439,'RULESET_EVENT','0',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(440,'RULESET_EVENT','1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(441,'RULESET_EVENT','2',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(442,'OPERATORS','=',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(443,'OPERATORS','<>',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(444,'OPERATORS','BETWEEN',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(445,'OPERATORS','<',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(446,'OPERATORS','<=',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(447,'OPERATORS','>',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(448,'OPERATORS','>=',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(449,'OPERATORS','LIKE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(450,'OPERATORS','NOT LIKE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(451,'OPERATORS','IS NULL',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(452,'OPERATORS','IS NOT NULL',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(453,'REALM_AUDIT','0',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(454,'REALM_AUDIT','1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(455,'REALM_AUDIT','2',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(456,'REALM_OPTION','0',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(457,'REALM_OPTION','1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(458,'LABEL_ALG','HUU',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(459,'LABEL_ALG','HIU',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(460,'LABEL_ALG','HMU',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(461,'LABEL_ALG','HNU',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(462,'LABEL_ALG','HUI',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(463,'LABEL_ALG','HII',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(464,'LABEL_ALG','HMI',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(465,'LABEL_ALG','HNI',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(466,'LABEL_ALG','HUM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(467,'LABEL_ALG','HIM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(468,'LABEL_ALG','HMM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(469,'LABEL_ALG','HNM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(470,'LABEL_ALG','HUN',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(471,'LABEL_ALG','HIN',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(472,'LABEL_ALG','HMN',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(473,'LABEL_ALG','HNN',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(474,'LABEL_ALG','LUU',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(475,'LABEL_ALG','LIU',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(476,'LABEL_ALG','LMU',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(477,'LABEL_ALG','LNU',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(478,'LABEL_ALG','LUI',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(479,'LABEL_ALG','LII',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(480,'LABEL_ALG','LMI',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(481,'LABEL_ALG','LNI',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(482,'LABEL_ALG','LUM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(483,'LABEL_ALG','LIM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(484,'LABEL_ALG','LMM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(485,'LABEL_ALG','LNM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(486,'LABEL_ALG','LUN',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(487,'LABEL_ALG','LIN',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(488,'LABEL_ALG','LMN',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(489,'LABEL_ALG','LNN',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(490,'DB_OBJECT_TYPE','CLUSTER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(491,'DB_OBJECT_TYPE','CONSUMER GROUP',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(492,'DB_OBJECT_TYPE','CONTEXT',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(493,'DB_OBJECT_TYPE','DIMENSION',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(494,'DB_OBJECT_TYPE','DIRECTORY',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(495,'DB_OBJECT_TYPE','EVALUATION CONTEXT',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(496,'DB_OBJECT_TYPE','FUNCTION',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(497,'DB_OBJECT_TYPE','INDEX',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(498,'DB_OBJECT_TYPE','INDEX PARTITION',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(499,'DB_OBJECT_TYPE','INDEXTYPE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(500,'DB_OBJECT_TYPE','JAVA CLASS',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(501,'DB_OBJECT_TYPE','JAVA DATA',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(502,'DB_OBJECT_TYPE','JAVA RESOURCE',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(503,'DB_OBJECT_TYPE','JOB',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(504,'DB_OBJECT_TYPE','JOB CLASS',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(505,'DB_OBJECT_TYPE','LIBRARY',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(506,'DB_OBJECT_TYPE','LOB',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(507,'DB_OBJECT_TYPE','LOB PARTITION',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(508,'DB_OBJECT_TYPE','MATERIALIZED VIEW',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(509,'DB_OBJECT_TYPE','OPERATOR',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(510,'DB_OBJECT_TYPE','PACKAGE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(511,'DB_OBJECT_TYPE','PACKAGE BODY',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(512,'DB_OBJECT_TYPE','PROCEDURE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(513,'DB_OBJECT_TYPE','PROGRAM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(514,'DB_OBJECT_TYPE','QUEUE',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(515,'DB_OBJECT_TYPE','RESOURCE PLAN',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(516,'DB_OBJECT_TYPE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(517,'DB_OBJECT_TYPE','RULE',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(518,'DB_OBJECT_TYPE','RULE SET',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(519,'DB_OBJECT_TYPE','SCHEDULE',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(520,'DB_OBJECT_TYPE','SEQUENCE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(521,'DB_OBJECT_TYPE','SYNONYM',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(522,'DB_OBJECT_TYPE','TABLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(523,'DB_OBJECT_TYPE','TABLE PARTITION',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(524,'DB_OBJECT_TYPE','TRIGGER',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(525,'DB_OBJECT_TYPE','TYPE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(526,'DB_OBJECT_TYPE','TYPE BODY',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(527,'DB_OBJECT_TYPE','UNDEFINED',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(528,'DB_OBJECT_TYPE','VIEW',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(529,'DB_OBJECT_TYPE','WINDOW',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(530,'DB_OBJECT_TYPE','WINDOW GROUP',1,USER,SYSDATE,USER,SYSDATE);
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(531,'DB_OBJECT_TYPE','XML SCHEMA',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(532,'DB_OBJECT_TYPE','MATERIALIZED VIEW LOG',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(533,'DB_OBJECT_TYPE','MATERIALIZED VIEW',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(601,'AUDIT_EVENTS','20001',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(602,'AUDIT_EVENTS','20002',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(603,'AUDIT_EVENTS','20003',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(604,'AUDIT_EVENTS','20004',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(605,'AUDIT_EVENTS','20005',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(606,'AUDIT_EVENTS','20006',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(607,'AUDIT_EVENTS','20007',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(608,'AUDIT_EVENTS','20008',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(609,'AUDIT_EVENTS','20009',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(610,'AUDIT_EVENTS','20010',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(611,'AUDIT_EVENTS','20011',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(612,'AUDIT_EVENTS','20012',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(613,'AUDIT_EVENTS','20013',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(614,'AUDIT_EVENTS','20014',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(615,'AUDIT_EVENTS','20015',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(616,'AUDIT_EVENTS','20016',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(617,'AUDIT_EVENTS','20017',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(618,'AUDIT_EVENTS','20018',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(619,'AUDIT_EVENTS','20019',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(620,'AUDIT_EVENTS','20020',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(621,'AUDIT_EVENTS','20021',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(622,'AUDIT_EVENTS','20022',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(623,'AUDIT_EVENTS','20023',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(624,'AUDIT_EVENTS','20024',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(625,'AUDIT_EVENTS','20025',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(626,'AUDIT_EVENTS','20026',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(627,'AUDIT_EVENTS','20027',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(628,'AUDIT_EVENTS','20028',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(629,'AUDIT_EVENTS','20029',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(630,'AUDIT_EVENTS','20030',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(631,'AUDIT_EVENTS','20031',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(632,'AUDIT_EVENTS','20032',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(633,'AUDIT_EVENTS','20033',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(634,'AUDIT_EVENTS','20034',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(635,'AUDIT_EVENTS','20035',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(636,'AUDIT_EVENTS','20036',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(637,'AUDIT_EVENTS','20037',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(638,'AUDIT_EVENTS','20038',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(639,'AUDIT_EVENTS','20039',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(640,'AUDIT_EVENTS','20040',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(641,'AUDIT_EVENTS','20041',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(642,'AUDIT_EVENTS','20042',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(643,'AUDIT_EVENTS','20043',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(644,'AUDIT_EVENTS','20044',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(645,'AUDIT_EVENTS','20045',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(646,'AUDIT_EVENTS','20046',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(647,'AUDIT_EVENTS','20047',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(648,'AUDIT_EVENTS','20048',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(649,'AUDIT_EVENTS','20049',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(650,'AUDIT_EVENTS','20050',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(651,'AUDIT_EVENTS','20051',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(652,'AUDIT_EVENTS','20052',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(653,'AUDIT_EVENTS','20053',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(654,'AUDIT_EVENTS','20054',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(655,'AUDIT_EVENTS','20055',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(656,'AUDIT_EVENTS','20056',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(657,'AUDIT_EVENTS','20057',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(658,'AUDIT_EVENTS','20058',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(659,'AUDIT_EVENTS','20059',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(660,'AUDIT_EVENTS','20060',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(661,'AUDIT_EVENTS','20061',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(662,'AUDIT_EVENTS','20062',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(663,'AUDIT_EVENTS','20063',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(664,'AUDIT_EVENTS','10011',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(665,'AUDIT_EVENTS','20064',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(666,'AUDIT_EVENTS','20065',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(667,'AUDIT_EVENTS','20066',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(668,'AUDIT_EVENTS','20067',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(669,'AUDIT_EVENTS','20068',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(670,'AUDIT_EVENTS','20069',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(671,'AUDIT_EVENTS','20070',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(672,'AUDIT_EVENTS','20071',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(673,'AUDIT_EVENTS','20072',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(674,'AUDIT_EVENTS','20073',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

-- Policy management audit support
BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(675,'AUDIT_EVENTS','20074',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(676,'AUDIT_EVENTS','20075',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(677,'AUDIT_EVENTS','20076',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(678,'AUDIT_EVENTS','20077',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(679,'AUDIT_EVENTS','20078',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(680,'AUDIT_EVENTS','20079',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(681,'AUDIT_EVENTS','20080',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(682,'AUDIT_EVENTS','20081',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(683,'AUDIT_EVENTS','20082',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(684,'AUDIT_EVENTS','20083',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(685,'AUDIT_EVENTS','20084',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

-- Project 36761: support maintenance authorization
BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(686,'AUDIT_EVENTS','20085',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(687,'AUDIT_EVENTS','20086',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- For DIAGNOSTIC authorization
BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(688,'AUDIT_EVENTS','20089',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(689,'AUDIT_EVENTS','20090',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(690,'AUDIT_EVENTS','20091',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(691,'AUDIT_EVENTS','20092',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(692,'AUDIT_EVENTS','20093',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(693,'AUDIT_EVENTS','20094',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- For DBCAPTURE authorization
BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(694,'AUDIT_EVENTS','20095',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(695,'AUDIT_EVENTS','20096',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- For DBREPLAY authorization
BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(696,'AUDIT_EVENTS','20097',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(697,'AUDIT_EVENTS','20098',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


-- Project 46812: support TRAINING mode
-- Bug 22840314: Change training api to simulation
BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(1000,'SIMULATION_VIOLATION','1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(1001,'SIMULATION_VIOLATION','2',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(1002,'SIMULATION_VIOLATION','3',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(1003,'SIMULATION_VIOLATION','4',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(1004,'SIMULATION_VIOLATION','5',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(1005,'SIMULATION_VIOLATION','6',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(1006,'SIMULATION_VIOLATION','7',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

/*Bug 9092184: insert the following missing records */
--INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(534,'FACTOR_IDENTIFY','3',1,USER,SYSDATE,USER,SYSDATE);

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(535,'FACTOR_EVALUATE','2',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(536,'RULESET_AUDIT','3',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(537,'RULESET_EVENT','3',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.CODE$ (ID#,CODE_GROUP,CODE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(538,'REALM_AUDIT','3',1,USER,SYSDATE,USER,SYSDATE);
  EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/

Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the factor_type$ table.
Rem
Rem
Rem
Rem
Rem

--A separate anonymous block used is for each insert.
--Subsequent modifications should use a similar method.

BEGIN
EXECUTE IMMEDIATE 'INSERT INTO DVSYS.FACTOR_TYPE$ (ID#,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(1,1,USER,SYSDATE,USER,SYSDATE)';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
EXECUTE IMMEDIATE 'INSERT INTO DVSYS.FACTOR_TYPE$ (ID#,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(2,1,USER,SYSDATE,USER,SYSDATE)';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
EXECUTE IMMEDIATE 'INSERT INTO DVSYS.FACTOR_TYPE$ (ID#,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(3,1,USER,SYSDATE,USER,SYSDATE)';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
EXECUTE IMMEDIATE 'INSERT INTO DVSYS.FACTOR_TYPE$ (ID#,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(4,1,USER,SYSDATE,USER,SYSDATE)';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
EXECUTE IMMEDIATE 'INSERT INTO DVSYS.FACTOR_TYPE$ (ID#,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(5,1,USER,SYSDATE,USER,SYSDATE)';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
EXECUTE IMMEDIATE 'INSERT INTO DVSYS.FACTOR_TYPE$ (ID#,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(6,1,USER,SYSDATE,USER,SYSDATE)';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
EXECUTE IMMEDIATE 'INSERT INTO DVSYS.FACTOR_TYPE$ (ID#,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(7,1,USER,SYSDATE,USER,SYSDATE)';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
EXECUTE IMMEDIATE 'INSERT INTO DVSYS.FACTOR_TYPE$ (ID#,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(8,1,USER,SYSDATE,USER,SYSDATE)';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
EXECUTE IMMEDIATE 'INSERT INTO DVSYS.FACTOR_TYPE$ (ID#,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(9,1,USER,SYSDATE,USER,SYSDATE)';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
EXECUTE IMMEDIATE 'INSERT INTO DVSYS.FACTOR_TYPE$ (ID#,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(10,1,USER,SYSDATE,USER,SYSDATE)';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
EXECUTE IMMEDIATE 'INSERT INTO DVSYS.FACTOR_TYPE$ (ID#,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE) VALUES(11,1,USER,SYSDATE,USER,SYSDATE)';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the factor$ table.
Rem
Rem
Rem
Rem
Rem

BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(1,'Database_Hostname','UPPER(DVSYS.DBMS_MACADM.GET_INSTANCE_INFO(''HOST_NAME''))',1,1,0,0,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Bug 6503742. Use new database_ip context to populate the factor data
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(2,'Database_IP','UPPER(SYS_CONTEXT(''USERENV'',''SERVER_HOST_IP''))',2,1,0,0,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(3,'Database_Instance','UPPER(SYS_CONTEXT(''USERENV'',''INSTANCE''))',3,1,0,0,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(4,'Client_IP','UPPER(SYS_CONTEXT(''USERENV'',''IP_ADDRESS''))',2,1,0,0,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(5,'Authentication_Method','UPPER(SYS_CONTEXT(''USERENV'',''AUTHENTICATION_METHOD''))',5,1,0,1,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(6,'Identification_Type','UPPER(SYS_CONTEXT(''USERENV'',''IDENTIFICATION_TYPE''))',5,1,0,1,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(7,'Database_Domain','UPPER(SYS_CONTEXT(''USERENV'',''DB_DOMAIN''))',7,1,0,0,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(8,'Database_Name','UPPER(SYS_CONTEXT(''USERENV'',''DB_NAME''))',3,1,0,0,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(9,'Lang','UPPER(SYS_CONTEXT(''USERENV'',''LANG''))',4,1,0,1,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(10,'Language','UPPER(SYS_CONTEXT(''USERENV'',''LANGUAGE''))',4,1,0,1,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(11,'Network_Protocol','UPPER(SYS_CONTEXT(''USERENV'',''NETWORK_PROTOCOL''))',5,1,0,0,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(12,'Proxy_User','SYS_CONTEXT(''USERENV'',''PROXY_USER'')',4,1,0,0,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(13,'Proxy_Enterprise_Identity','SYS_CONTEXT(''USERENV'',''PROXY_ENTERPRISE_IDENTITY'')',4,1,0,0,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(14,'Session_User','SYS_CONTEXT(''USERENV'',''SESSION_USER'')',4,1,0,1,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(15,'Domain','',7,2,0,0,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(16,'Machine','DVSYS.DBMS_MACADM.GET_SESSION_INFO(''MACHINE'')',7,1,0,0,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(17,'Enterprise_Identity','SYS_CONTEXT(''USERENV'',''ENTERPRISE_IDENTITY'')',4,1,0,1,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Bug 19252338. Use new module context to populate the factor data. Prefixed factor names with 'DV$_' to avoid name conflit with existing custom factor names
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(18,'DV$_Module','(SYS_CONTEXT(''USERENV'',''MODULE''))',11,1,0,1,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Bug 19252338. Use new client_identifier context to populate the factor data. Prefixed factor names with 'DV$_' to avoid name conflit with existing custom factor names
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(19,'DV$_Client_Identifier','(SYS_CONTEXT(''USERENV'',''CLIENT_IDENTIFIER''))',4,1,0,1,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Bug 19252338. Use new Dblink_info context to populate the factor data. Prefixed factor names with 'DV$_' to avoid name conflit with existing custom factor names
BEGIN
INSERT INTO DVSYS.FACTOR$ (ID#,NAME,GET_EXPR,FACTOR_TYPE_ID#,IDENTIFIED_BY,LABELED_BY,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(20,'DV$_Dblink_Info','(SYS_CONTEXT(''USERENV'',''DBLINK_INFO''))',7,1,0,0,0,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the identity$ table.
Rem
Rem
Rem
Rem
Rem

SET SERVEROUT ON SIZE 1000000

DECLARE
    l_id NUMBER := 0;
    l_factor_id NUMBER;
    l_date DATE := SYSDATE;
    l_user VARCHAR2(128) := USER;
    l_val dvsys.identity$.value%TYPE;
    l_sql VARCHAR2(255);
    l_tmp VARCHAR2(255);
    l_trust NUMBER := 1;
    l_index NUMBER;
    l_count NUMBER;
    l_char VARCHAR2(1);
    l_found BOOLEAN;
BEGIN

    SELECT id#
    INTO l_factor_id
    FROM DVSYS.factor$
    WHERE name = 'Authentication_Method'
    ;
    l_id := l_id + 1;
    l_val := 'PASSWORD';
    INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);
    l_id := l_id + 1;
    l_val := 'KERBEROS';
    INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);
    l_id := l_id + 1;
    l_val := 'SSL';
    INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);
    l_id := l_id + 1;
    l_val := 'RADIUS';
    INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);
    l_id := l_id + 1;
    l_val := 'OS';
    INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);
    l_id := l_id + 1;
    l_val := 'DCE';
    INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);
    l_id := l_id + 1;
    l_val := 'NONE';
    INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);

    SELECT id#
    INTO l_factor_id
    FROM DVSYS.factor$
    WHERE name = 'Identification_Type'
    ;

    l_id := l_id + 1;
    l_val := 'LOCAL';
    INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);
    l_id := l_id + 1;
    l_val := 'EXTERNAL';
    INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);
    l_id := l_id + 1;
    l_val := 'GLOBAL SHARED';
    INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);
    l_id := l_id + 1;
    l_val := 'GLOBAL PRIVATE';
    INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);

    SELECT id#
    INTO l_factor_id
    FROM DVSYS.factor$
    WHERE name = 'Database_Instance'
    ;

    l_count := 0;

    IF ( l_count = 0 ) THEN
        FOR c1 in ( SELECT * FROM sys.GV_$INSTANCE ) LOOP
            l_id := l_id + 1;
            l_val := c1.instance_number;
            BEGIN
             INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
             VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);

            EXCEPTION
             WHEN DUP_VAL_ON_INDEX THEN
                 NULL; -- this should not occur
             WHEN OTHERS THEN
              dbms_output.put_line('error loading instance identity for ' 
               || to_char(l_factor_id) || ':' || l_val || ':' || sqlerrm );
            END;

        END LOOP;
    END IF;

    SELECT id#
    INTO l_factor_id
    FROM DVSYS.factor$
    WHERE name = 'Database_Hostname'
    ;

    l_count := 0;
    IF ( l_count = 0 ) THEN
        FOR c2 in ( SELECT * FROM sys.GV_$INSTANCE ) LOOP
          BEGIN
            l_id := l_id + 1;
            -- l_val := c1.instance_name;
            l_tmp := upper(DVSYS.dbms_macadm.get_instance_info('HOST_NAME'));
            -- upper(SYS_CONTEXT('USERENV','HOST'));
            l_val := upper(c2.host_name);
            -- for Windows
            l_index := INSTR(l_tmp,'\');
            IF ( l_index > 0 ) THEN
                l_tmp := SUBSTR(l_tmp,1,l_index);
                l_val := l_tmp || l_val;
            END IF;

             INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
             VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);

            EXCEPTION
             WHEN DUP_VAL_ON_INDEX THEN
                 NULL; -- this is okay , two instance on same host
             WHEN OTHERS THEN
              dbms_output.put_line('error loading host identity for '
               || to_char(l_factor_id) || ':' || l_val || ':' || sqlerrm );
            END;

        END LOOP;
    END IF;

    SELECT id#
    INTO l_factor_id
    FROM DVSYS.factor$
    WHERE name = 'Client_IP'
    ;

    l_val := UPPER(SYS_CONTEXT('USERENV','IP_ADDRESS'));
    IF ( l_val IS NOT NULL ) THEN
    l_id := l_id + 1;
        INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
        VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);
    END IF;
    FOR c99 IN (
        SELECT id# , get_expr
        FROM DVSYS.factor$
        WHERE name IN
        (
        'Authentication_Data'
        ,'Database_Domain'
        ,'Database_Name'
        ,'Client_IP'
        ,'External_Name'
        ,'Lang'
        ,'Language'
        ,'Machine'
        ,'Network_Protocol'
        ,'Proxy_User'
        ,'Service_Name'
        ) ORDER BY name )
        LOOP

            l_factor_id := c99.id# ;
            l_sql := 'SELECT ' || c99.get_expr || ' FROM DUAL ';

            BEGIN

            EXECUTE IMMEDIATE l_sql INTO l_val;
            IF ( l_val IS NOT NULL ) THEN
                l_id := l_id + 1;
                INSERT INTO DVSYS.identity$(id#,factor_id#,value,trust_level,version,created_by,create_date,updated_by,update_date)
                VALUES(l_id,l_factor_id,l_val,l_trust,1,l_user,l_date,l_user,l_date);

            END IF;
            EXCEPTION
                WHEN OTHERS THEN
                    dbms_output.put_line ('error loading identity for ' || to_char(l_factor_id) || ':' || sqlerrm );
            END;
        END LOOP;

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/



SET SERVEROUT OFF



Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the rule_set$ table.
Rem
Rem
Rem
Rem

BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(1,'Y',1,0,1,0,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(2,'Y',1,0,1,0,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(3,'Y',1,1,1,0,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(4,'Y',2,1,1,0,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(5,'Y',1,1,1,0,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(6,'Y',1,1,1,0,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Project 46812: rule set #7 and #9 are removed, should not be used anymore.
--Bug 7137958: delete scheduler job authorization ruleset ID#=10
--Note: Rule Set ID# 8 and 10 should not be used anymore.

--new rule sets
BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(12,'Y',1,1,1,0,1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(13,'Y',1,1,1,0,1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(14,'Y',1,1,1,0,1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(15,'Y',1,1,1,0,1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(16,'Y',1,1,1,0,1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(17,'Y',1,1,1,0,1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(18,'Y',1,1,1,0,1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(19,'Y',1,1,1,0,1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.RULE_SET$ (ID#,ENABLED,EVAL_OPTIONS,AUDIT_OPTIONS,FAIL_OPTIONS,HANDLER_OPTIONS,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(20,'Y',1,1,1,0,1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the rule$ table.
Rem
Rem
Rem
Rem

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
 VALUES(1,'1=1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(2,'1=0',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
-- Bug 18733351: update rules to recognize session enabled roles.
-- Bug 20313334: Update rules 3, 4, 5, 6, 7 with new function role_granted_enabled_varchar.

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(3,'DVSYS.DBMS_MACUTL.ROLE_GRANTED_ENABLED_VARCHAR(''DV_ACCTMGR'',''"''||dvsys.dv_login_user||''"'', 1, dvsys.get_required_scope) = ''Y''',1, USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
-- Bug 18733351: update rules to recognize session enabled roles.
BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(4,'DVSYS.DBMS_MACUTL.ROLE_GRANTED_ENABLED_VARCHAR(''DBA'',''"''||dvsys.dv_login_user||''"'') = ''Y''',1,
       USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
-- Bug 18733351: update rules to recognize session enabled roles.
BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(5,'DVSYS.DBMS_MACUTL.ROLE_GRANTED_ENABLED_VARCHAR(''DV_ADMIN'',''"''||dvsys.dv_login_user||''"'') = ''Y''',1,
       USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
-- Bug 18733351: update rules to recognize session enabled roles.
BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(6,'DVSYS.DBMS_MACUTL.ROLE_GRANTED_ENABLED_VARCHAR(''DV_OWNER'',''"''||dvsys.dv_login_user||''"'') = ''Y''',1,
       USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
-- Bug 18733351: update rules to recognize session enabled roles.
BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(7,'DVSYS.DBMS_MACUTL.ROLE_GRANTED_ENABLED_VARCHAR(''LBAC_DBA'',''"''||dvsys.dv_login_user||''"'') = ''Y''',1,
       USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(8,'USER IN (''SYS'',''SYSTEM'')',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(9,
    '(DVSYS.DBMS_MACUTL.USER_HAS_SYSTEM_PRIV_VARCHAR(''EXEMPT ACCESS POLICY'',''"''||dvsys.dv_login_user||''"'') = ''N'') OR USER = ''SYS''',
    1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(10,'dvsys.dv_login_user = dvsys.dv_dict_obj_name',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(14,'DVSYS.DBMS_MACADM.IS_ALTER_USER_ALLOW_VARCHAR(''"''||dvsys.dv_login_user||''"'') = ''Y''',1,
       USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(22,'DVSYS.DBMS_MACADM.IS_DROP_USER_ALLOW_VARCHAR(''"''||dvsys.dv_login_user||''"'') = ''Y''',1,
       USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
 VALUES(50,'TO_NUMBER(TO_CHAR(SYSDATE,''DD'')) = 1',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(51,'(LAST_DAY(TRUNC(SYSDATE)) - TRUNC(SYSDATE)) = 0',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(100,
    ' (NVL(DVSYS.DBMS_MACADM.GET_SESSION_INFO(''PROGRAM''),''X'') NOT LIKE ''exp@%'' ) AND '
    || '(NVL(DVSYS.DBMS_MACADM.GET_SESSION_INFO(''PROGRAM''),''X'') NOT LIKE ''EXP.EX%'')',
    1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--project 46812: new seeded rules
--rule$ id# 11, 12, 13, 15, 16, 17, 18, 19, 20, 21 should not be used anymore
BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(200,'UPPER(DVSYS.parameter_value) = ''TRUE''',1, 
USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(201,'UPPER(DVSYS.parameter_value) = ''FALSE''',1, 
USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(202,'UPPER(DVSYS.parameter_value) = ''ON''',1, 
USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(203,'UPPER(DVSYS.parameter_value) = ''OFF''',1, 
USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(204,'UPPER(DVSYS.parameter_value) = ''NONE''',1, 
USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(205,'UPPER(DVSYS.parameter_value) <> ''TRUE''',1, 
USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(206,'UPPER(DVSYS.parameter_value) <> ''FALSE''',1, 
USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(207,'UPPER(DVSYS.parameter_value) <> ''ON''',1, 
USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(208,'UPPER(DVSYS.parameter_value) <> ''OFF''',1, 
USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(209,'UPPER(DVSYS.parameter_value) <> ''NONE''',1, 
USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(210,
    'DVSYS.parameter_name = ''MAX_DUMP_FILE_SIZE'' OR DVSYS.parameter_name NOT LIKE ''%DUMP%''',
    1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN
-- bug 21045941 : updated rule expression so that parameter 
-- CURSOR_BIND_CAPTURE_DESTINATION can be altered while DV is enabled
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(211,
    'DVSYS.parameter_name = ''STANDBY_ARCHIVE_DEST'' OR DVSYS.parameter_name = ''DB_RECOVERY_FILE_DEST_SIZE'' OR DVSYS.parameter_name LIKE ''%LOG_ARCHIVE_DEST%'' OR DVSYS.parameter_name LIKE ''%CURSOR_BIND_CAPTURE_DESTINATION%'' OR DVSYS.parameter_name NOT LIKE ''%_DEST%''',
    1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Bug 22584525
BEGIN
INSERT INTO DVSYS.rule$ (ID#,RULE_EXPR,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(212,
    'DVSYS.dbms_macutl.alter_system_dump_varchar = ''Y''',
    1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the rule_set_rule$ table.
Rem
Rem
Rem
Rem

Rem

-- enabled
BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(1,1,1,1,'Y',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


-- disabled
BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(2,2,2,1,'Y',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


-- user account maintenance
BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(3,3,3,1,'Y',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(19,3,22,1,'Y',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


-- user account maintenance for ALTER USER
BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(4,4,14,1,'Y',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(5,4,10,1,'Y',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(6,6,6,1,'Y',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


--Bug 7137958: ID# 18 and 10 should not be used anymore, since these IDs are 
--used during downgrade.

--Project 46812: new seeded rule sets and rules
BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(21,12,205,1,'Y',1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(22,13,205,1,'Y',1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(23,14,206,1,'Y',1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(24,15,208,1,'Y',1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(25,15,209,1,'Y',1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(26,16,205,1,'Y',1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(27,17,205,1,'Y',1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(28,18,206,1,'Y',1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(29,19,210,1,'Y',1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(30,19,211,1,'Y',1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Bug 22584525
BEGIN 
INSERT INTO DVSYS.RULE_SET_RULE$ (ID#,RULE_SET_ID#,RULE_ID#,RULE_ORDER,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(31,20,212,1,'Y',1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/



Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the realm$ table.
Rem
Rem
Rem
Rem
Rem

BEGIN 
INSERT INTO DVSYS.REALM$ (ID#,ENABLED,AUDIT_OPTIONS,REALM_TYPE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(2,'Y',1,0,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN 
INSERT INTO DVSYS.REALM$ (ID#,ENABLED,AUDIT_OPTIONS,REALM_TYPE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(6,'Y',1,0,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN 
INSERT INTO DVSYS.REALM$ (ID#,ENABLED,AUDIT_OPTIONS,REALM_TYPE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(7,'Y',1,0,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN 
INSERT INTO DVSYS.REALM$ (ID#,ENABLED,AUDIT_OPTIONS,REALM_TYPE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(8,'Y',1,0,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN 
INSERT INTO DVSYS.REALM$ (ID#,ENABLED,AUDIT_OPTIONS,REALM_TYPE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(9,'Y',1,0,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
BEGIN 
INSERT INTO DVSYS.REALM$ (ID#,ENABLED,AUDIT_OPTIONS,REALM_TYPE,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
VALUES(10,'Y',1,0,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/



Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the realm_object$ table.
Rem
Rem
Rem
Rem
Rem

variable parent_realm_id number;
begin
   select 1 into :parent_realm_id from dual;
end;
/

--Use % as owner of roles since roles don't have owner.
variable object_owner_none VARCHAR2(128);
begin
   :object_owner_none := '%';
end;
/

-- Use 2147483636 as uid for '%'.
variable all_schema number;
begin
  select 2147483636 into :all_schema from dual;
end;
/

-- Get sys and system user ID.
variable sys_schema number;
begin 
  select user# into :sys_schema from sys.user$ where name = 'SYS';
end;
/

variable system_schema number;
begin
  select user# into :system_schema from sys.user$ where name = 'SYSTEM';
end;
/

BEGIN
EXECUTE IMMEDIATE 'DROP SEQUENCE realm_object$_seq_temp';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -02289) THEN NULL; -- sequence does not exist
     ELSE RAISE;
     END IF;

END;
/

-- Bug 20216779: Bump up the starting number to 200 from 1. Since this script
-- is called in dvdbmig.sql, starting with 1 may incorrectly fail to insert
-- some records during upgrade. All realm_object$ id#'s prior to 12.2 release
-- are below 200 (either direct installation or upgraded). Hence, setting the 
-- starting id# to 200 avoids any conflicts due to the primary key constraint
-- on id#. These id#s do not need to be fixed across versions; the only 
-- requirement is that the id#s should be below 5000 to indicate that the
-- realm objects are Oracle supplied.
CREATE SEQUENCE realm_object$_seq_temp START WITH 200
/

------------------------------------------------------------------------------
-- ************************************************************************ --
--                             IMPORTANT NOTICE                             --
-- PLEASE ADD THE NEW INSERTS TO DVSYS.REALM_OBJECT$ AT THE END OF THE OF THE
-- LAST INSERT TO THIS TABLE (I.E. ONLY APPEND) AS UPGRADE RELIES ON THIS 
-- SEQUENCE TO INSERT NEW ENTRIES INTRODUCED IN THE UPGRADED VERSION.
-- ************************************************************************ --
------------------------------------------------------------------------------

-------------------------------------------
-- 1. Oracle data dictionary
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,10,'SYSTEM',:system_schema,'%','%',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
-- Expression Filters - core tech
DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='EXFSYS';
  INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
  VALUES(realm_object$_seq_temp.nextval,8,'EXFSYS',userid,'%','%',1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;  -- ignore if user does not exist
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/
-- sql outlines -core tech
DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='OUTLN';
  INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
  VALUES(realm_object$_seq_temp.nextval,10,'OUTLN',userid,'%','%',1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
   WHEN NO_DATA_FOUND THEN
     NULL;  -- ignore if user does not exist
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

-------------------------------
 -- related roles
--################################ssb
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'DV_REALM_RESOURCE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'DV_REALM_OWNER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'DBA','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'RESOURCE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


-- CRUD on AUX_STATS$ - core tech
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'GATHER_SYSTEM_STATISTICS','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- OPTIMIZER_PROCESSING_RATE role on the table opt_calibration_stats$
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'OPTIMIZER_PROCESSING_RATE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- A DBA using Oracle Database heterogeneous services - core tech
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'HS_ADMIN_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- ANY prvis on jobs, exec on class/program
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'SCHEDULER_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Advanced Queues, create any queue could be done in any
-- realm so may want to protect but part of core tech
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'AQ_ADMINISTRATOR_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'AQ_USER_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'GLOBAL_AQ_USER_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Bug 15943291: Add DV protection on more database roles
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'AUDIT_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'AUDIT_VIEWER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/
--end bug 15943291

-- lrg 19613052: Add DV protection on DATAPATCH_ROLE
BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'DATAPATCH_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-------------------------------------------
-- Data Vault
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,'DVSYS',(select user# from sys.user$ where name='DVSYS'),'%','%',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,'DVF',(select user# from sys.user$ where name='DVF'),'%','%',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,'LBACSYS',(select user# from sys.user$ where name='LBACSYS'),'%','%',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,'SYS',:sys_schema,'DBMS_RLS','%',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_OWNER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_SECANALYST','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_PUBLIC','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_PATCH_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_MONITOR','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_STREAMS_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'LBAC_DBA','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Database Account Manager realm
BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,6,:object_owner_none,:all_schema,'CONNECT','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,6,:object_owner_none,:all_schema,'DV_ACCTMGR','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'IMP_FULL_DATABASE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'EXP_FULL_DATABASE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- execs on dbms packages
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'EXECUTE_CATALOG_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- a lot of CREATE ANY privs
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'RECOVERY_CATALOG_OWNER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- selects on a lot of SYS tables
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'SELECT_CATALOG_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- manage standby database
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'LOGSTDBY_ADMINISTRATOR','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- access to SYS on LBACSYS.DBA_OLS_STATUS
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,'LBACSYS',(select user# from sys.user$ where name='LBACSYS'),'DBA_OLS_STATUS','VIEW',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


-- roles
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'OLAP_DBA','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'OLAP_USER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- roles
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'JAVADEBUGPRIV','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'JAVAIDPRIV','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'JAVASYSPRIV','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'JAVAUSERPRIV','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'JAVA_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Bug 18745788: add CONNECT to Oracle System Privilege and Role Management Realm.
BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'CONNECT','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'EJBCLIENT','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-----------------------------------------------------
--        Oracle Catalog-Text/interMedia/UltraSearch/Workspace Manager
-- schemas
DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='CTXSYS'; 
  INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
  VALUES(realm_object$_seq_temp.nextval,8,'CTXSYS',userid,'%','%',1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;  -- ignore if user does not exist
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/

-- roles
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'CTXAPP','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-----------------------------------------------------
--        Oracle Catalog-Monitoring
-- schemas
DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='DBSNMP';
  INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
  VALUES(realm_object$_seq_temp.nextval,7,'DBSNMP',userid,'%','%',1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
     NULL;  -- ignore if user does not exist
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/

-- bug 10253750: remove SYSMAN, MGMT_VIEW, MGMT_USER from the EM realm 
-- Only keep DBSNMP and OEM_MONITOR in the EM realm


-- roles
BEGIN 
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,7,:object_owner_none,:all_schema,'OEM_MONITOR','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-----------------------------------------------------
--        Oracle Catalog-Spatial
-- schemas
DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='MDDATA';
  INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
  VALUES(realm_object$_seq_temp.nextval,8,'MDDATA',userid,'%','%',1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;  -- ignore if user does not exist
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/

DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='MDSYS';
  INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
  VALUES(realm_object$_seq_temp.nextval,8,'MDSYS',userid,'%','%',1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;  -- ignore if user does not exist
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/

-----------------------------------------------------
-- 7. Oracle Enterprise Manager

-- bug 10253750: remove SYSMAN, MGMT_VIEW, MGMT_USER from the EM realm 
-- Only keep DBSNMP and OEM_MONITOR in the EM realm
DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='DBSNMP';
  INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
  VALUES(realm_object$_seq_temp.nextval,7,'DBSNMP',userid,'%','%',1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
     NULL;  -- ignore if user does not exist
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,7,:object_owner_none,:all_schema,'OEM_MONITOR','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Bug 11662436: Protect DV_GOLDENGATE_ADMIN role with Oracle Database Vault realm.
BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_GOLDENGATE_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Bug 11662436: Protect DV_XSTREAM_ADMIN role with Oracle Database Vault realm.
BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_XSTREAM_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Bug 12356827: Protect DV_GOLDENGATE_REDO_ACCESS role with Oracle Database Vault realm.
BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_GOLDENGATE_REDO_ACCESS','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Bug 13728213: Protect DV_AUDIT_CLEANUP with Oracle Database Vault realm
BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_AUDIT_CLEANUP','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Bug 14456083: add DV_DATAPUMP_NETWORK_LINK role
BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_DATAPUMP_NETWORK_LINK','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- Protect the DV_POLICY_OWNER role with Oracle Database Vault realm.
BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,2,:object_owner_none,:all_schema,'DV_POLICY_OWNER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--begin Bug 20588540
BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'ADM_PARALLEL_EXECUTE_TASK','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'APEX_ADMINISTRATOR_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'APEX_GRANTS_FOR_NEW_USERS_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'AUTHENTICATEDUSER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'CAPTURE_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'CDB_DBA','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'DATAPUMP_EXP_FULL_DATABASE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'DATAPUMP_IMP_FULL_DATABASE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'DBFS_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'DBMS_MDX_INTERNAL','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,7,:object_owner_none,:all_schema,'EM_EXPRESS_ALL','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,7,:object_owner_none,:all_schema,'EM_EXPRESS_BASIC','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'GDS_CATALOG_SELECT','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'GGSYS_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'GSMADMIN_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'GSMUSER_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'GSM_POOLADMIN_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'HS_ADMIN_EXECUTE_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'HS_ADMIN_SELECT_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'JMXSERVER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,7,:object_owner_none,:all_schema,'OEM_ADVISOR','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'OLAP_XS_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'ORDADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'PDB_DBA','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'PROVISIONER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'RECOVERY_CATALOG_OWNER_VPD','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'RECOVERY_CATALOG_USER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'SODA_APP','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'SYSUMF_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'WM_ADMIN_ROLE','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'XDBADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'XDB_SET_INVOKER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'XDB_WEBSERVICES','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'XDB_WEBSERVICES_OVER_HTTP','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,8,:object_owner_none,:all_schema,'XDB_WEBSERVICES_WITH_PUBLIC','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'XS_CACHE_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'XS_CONNECT','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'XS_NAMESPACE_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'XS_SESSION_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- bug 22865694: add more xs roles

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'XSBYPASS','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'XSPROVISIONER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'XSSESSIONADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'XSNAMESPACEADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'XSCACHEADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'XSDISPATCHER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'XSAUTHENTICATED','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'DBMS_AUTH','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'DBMS_PASSWD','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'MIDTIER_AUTH','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'XSSWITCH','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'EXTERNAL_DBMS_AUTH','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

-- end bug 22865694
DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='XS$NULL';
  INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
  VALUES(realm_object$_seq_temp.nextval,9,'XS$NULL',userid,'%','%',1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
     NULL;  -- ignore if user does not exist
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/
--end Bug 20588540

-- Bug 22296366: protect all the public synonyms for DVSYS objects with the
-- Oracle Database Vault realm.
DECLARE
  CURSOR dv_pub_syn IS
    SELECT synonym_name
    FROM sys.dba_synonyms
    WHERE owner = 'PUBLIC' AND table_owner = 'DVSYS';
BEGIN
  FOR c IN dv_pub_syn LOOP
    BEGIN
     INSERT INTO dvsys.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
     VALUES(realm_object$_seq_temp.nextval,2,'PUBLIC',1,c.synonym_name,'SYNONYM',1,USER,SYSDATE,USER,SYSDATE);
    EXCEPTION
      WHEN OTHERS THEN
        IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
        ELSE RAISE;
        END IF;
    END;
  END LOOP;
END;
/

-- Also protect public synonyms for SYS.DUAL, SYS.DBA_DV_STATUS, 
-- SYS.CDB_DV_STATUS, and SYS.CONFIGURE_DV.
BEGIN
  INSERT INTO dvsys.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
  VALUES(realm_object$_seq_temp.nextval,2,'PUBLIC',1,'DUAL','SYNONYM',1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/
BEGIN
  INSERT INTO dvsys.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
  VALUES(realm_object$_seq_temp.nextval,2,'PUBLIC',1,'DBA_DV_STATUS','SYNONYM',1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/
BEGIN
  INSERT INTO dvsys.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
  VALUES(realm_object$_seq_temp.nextval,2,'PUBLIC',1,'CDB_DV_STATUS','SYNONYM',1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/
BEGIN
  INSERT INTO dvsys.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
  VALUES(realm_object$_seq_temp.nextval,2,'PUBLIC',1,'CONFIGURE_DV','SYNONYM',1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/

-- Begin bug 23606093 - adding three more oracle supplied roles to DV default realms.

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'APPLICATION_TRACE_VIEWER','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'DBJAVASCRIPT','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.realm_object$(id#,realm_id#,owner,owner_uid#,object_name,object_type,version,created_by,create_date,updated_by,update_date)
 VALUES(realm_object$_seq_temp.nextval,9,:object_owner_none,:all_schema,'RDFCTX_ADMIN','ROLE',1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

-- End bug 23606093

DROP SEQUENCE realm_object$_seq_temp
/

Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the realm_auth$ table.
Rem
Rem
Rem
Rem
-----------------------------------------------------
-- 2. Oracle Data Vault
-- use the user or the role
BEGIN 
INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
VALUES(30,2,'DV_OWNER',(select user# from sys.user$ where name='DV_OWNER'),NULL,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
VALUES(31,2,'DVSYS',(select user# from sys.user$ where name='DVSYS'),NULL,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

BEGIN 
INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
VALUES(32,2,'LBACSYS',(select user# from sys.user$ where name='LBACSYS'),NULL,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-- these owners are required for the web app and underlying public CRUD APIs, for secure application roles
BEGIN 
INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
VALUES(33,2,'DV_ADMIN',(select user# from sys.user$ where name='DV_ADMIN'),NULL,0,1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-----------------------------------------------------
-- 6. Data Vault User Manager

BEGIN 

INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
 VALUES(150,6,'DV_ACCTMGR',(select user# from sys.user$ where name='DV_ACCTMGR'),NULL,1,1,USER,SYSDATE,USER,SYSDATE);

   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-----------------------------------------------------
-- 7. Oracle Enterprise Manager

-- bug 10253750: remove SYSMAN from the EM realm 
-- Remove the ruleset assigned to SYSMAN

DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='DBSNMP';
  INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
  VALUES(201,7,'DBSNMP',userid,NULL,1,1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;  -- ignore if user does not exist
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/

BEGIN 
INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
 VALUES(202,7,'SYSTEM',:system_schema,NULL,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-----------------------------------------------------
-- 8. Oracle Default Schema Protection Realm

BEGIN
INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
 VALUES(300,8,'SYS',:sys_schema,NULL,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='CTXSYS';
  INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
  VALUES(301,8,'CTXSYS',userid,NULL,1,1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;  -- ignore if user does not exist
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/

DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='EXFSYS';
  INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
  VALUES(302,8,'EXFSYS',userid,NULL,1,1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;  -- ignore if user does not exist
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/

DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='MDSYS';
  INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
  VALUES(303,8,'MDSYS',userid,NULL,1,1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;  -- ignore if user does not exist
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/

DECLARE
  userid  NUMBER;
BEGIN
  select user# into userid from sys.user$ where name='MDDATA';
  INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
  VALUES(304,8,'MDDATA',userid,NULL,1,1,USER,SYSDATE,USER,SYSDATE);
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    NULL;  -- ignore if user does not exist
  WHEN OTHERS THEN
    IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
    ELSE RAISE;
    END IF;
END;
/

-----------------------------------------------------
-- 9. Oracle System Privilege and Role Management Realm

BEGIN
INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
 VALUES(400,9,'SYS',:sys_schema,NULL,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


-----------------------------------------------------
-- 10. Oracle Default Component Protection Realm

BEGIN
INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
 VALUES(500,10,'SYS',:sys_schema,NULL,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/


BEGIN 
INSERT INTO DVSYS.realm_auth$(id#,realm_id#,grantee,grantee_uid#,auth_rule_set_id#,auth_options,version,created_by,create_date,updated_by,update_date)
 VALUES(501,10,'SYSTEM',:system_schema,NULL,1,1,USER,SYSDATE,USER,SYSDATE);
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

-----------------------------------------------------


Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the command_rule$ table.
Rem
Rem
Rem
Rem

Rem

BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
SELECT 1,c.id#,3,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE
FROM dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'CREATE USER';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/




BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
SELECT 2,c.id#,4,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE
FROM dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER USER';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/



BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
SELECT 3,c.id#,3,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE
FROM dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'DROP USER';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/



BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
SELECT 4,c.id#,3,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE
FROM dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'CREATE PROFILE';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/



BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
SELECT 5,c.id#,3,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER PROFILE';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/



BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
SELECT 6,c.id#,3,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'DROP PROFILE';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

Rem Bug 10155812: change enabled value from 'Y' to 'N'. If 'alter system' 
Rem command rule is enabled, RAC installation executing 'alter system set 
Rem local_listener' would fail in DBCA before catmacpost.sql.

BEGIN
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE)
SELECT 11,c.id#,4,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE
FROM dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'CHANGE PASSWORD';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--new seeded command rules for ALTER SYSTEM command
--Not allow to set parameter _SYSTEM_TRIG_ENABLED
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 12,c.id#,2,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, '_SYSTEM_TRIG_ENABLED'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to set parameter CONTROL_FILES 
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 13,c.id#,2,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, 'CONTROL_FILES'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to set parameter UTL_FILE_DIR 
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 14,c.id#,2,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, 'UTL_FILE_DIR'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to set parameter AUDIT_SYSLOG_LEVEL 
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 15,c.id#,2,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, 'AUDIT_SYSLOG_LEVEL'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to set OPTIMIZER_SECURE_VIEW_MERGING to True
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 17,c.id#,12,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, 'OPTIMIZER_SECURE_VIEW_MERGING'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to set PLSQL_DEBUG to True
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 18,c.id#,13,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, 'PLSQL_DEBUG'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to set AUDIT_SYS_OPERATIONS to False
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 19,c.id#,14,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, 'AUDIT_SYS_OPERATIONS'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to turn off AUDIT_TRAIL
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 20,c.id#,15,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, 'AUDIT_TRAIL'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to set REMOTE_OS_ROLES to True
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 21,c.id#,16,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, 'REMOTE_OS_ROLES'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to set OS_ROLES to True
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 22,c.id#,17,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, 'OS_ROLES'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to set SQL92_SECURITY to False
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 23,c.id#,18,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, 'SQL92_SECURITY'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to modify Dump Parameters or allow modify Dest Parameters
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#)
SELECT 24,c.id#,19,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to dump 
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#)
SELECT 25,c.id#,20,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 16
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to set parameter _DYNAMIC_RLS_POLICIES 
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 26,c.id#,2,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, '_DYNAMIC_RLS_POLICIES'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to set parameter LOG_ARCHIVE_TRACE
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 28,c.id#,2,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, 'LOG_ARCHIVE_TRACE'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

--Not allow to set parameter LOG_ARCHIVE_MIN_SUCCEED_DEST
BEGIN 
INSERT INTO DVSYS.COMMAND_RULE$ (ID#,CODE_ID#,RULE_SET_ID#,OBJECT_OWNER,OBJECT_OWNER_UID#,OBJECT_NAME,ENABLED,VERSION,CREATED_BY,CREATE_DATE,UPDATED_BY,UPDATE_DATE,CLAUSE_ID#,PARAMETER_NAME)
SELECT 29,c.id#,2,'%',:all_schema,'%','Y',1,USER,SYSDATE,USER,SYSDATE, 10, 'LOG_ARCHIVE_MIN_SUCCEED_DEST'
from dvsys.code$ c WHERE c.code_group = 'SQL_CMDS' AND c.code = 'ALTER SYSTEM';
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;

END;
/

Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the factor$ and factor_link$ table support
Rem
Rem
Rem
Rem


SET SERVEROUT ON SIZE 1000000
DECLARE
    l_id NUMBER := 0;
    l_parent_id NUMBER;
    l_factor_id NUMBER;
    l_date DATE := SYSDATE;
    l_user VARCHAR2(128) := USER;
    l_val dvsys.identity$.value%TYPE;
    l_sql VARCHAR2(255);
    l_trust NUMBER := 1;

BEGIN
    l_parent_id := 15;
    l_factor_id := 3;

    l_id := l_id+1;
    INSERT INTO dvsys.factor_link$(id#,parent_factor_id#,child_factor_id#,label_ind,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_parent_id,l_factor_id,'Y',1,l_user,l_date,l_user,l_date);


    l_factor_id := 1;

    l_id := l_id+1;
    INSERT INTO dvsys.factor_link$(id#,parent_factor_id#,child_factor_id#,label_ind,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_parent_id,l_factor_id,'Y',1,l_user,l_date,l_user,l_date);

    l_factor_id := 2;

    l_id := l_id+1;
    INSERT INTO dvsys.factor_link$(id#,parent_factor_id#,child_factor_id#,label_ind,version,created_by,create_date,updated_by,update_date)
    VALUES(l_id,l_parent_id,l_factor_id,'Y',1,l_user,l_date,l_user,l_date);
EXCEPTION
 WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE dbms_output.put_line ('sddomain.sql error:' || sqlerrm );
     END IF;   
END;
/

SET SERVEROUT OFF

/* Bug 9941304: dvsys.mac_policy$ table is to store OLS policies that are 
 * assoicated with a DV factor. Existing OLS policies  should not be inserted 
 * into mac_policy$ table during DV installation. 
*/

Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the policy$ table.
Rem
Rem
Rem
Rem
Rem
Rem Bug 20216779: set the policy state to PARTIAL (3) during upgrade
Rem from versions lower than 12.2. During fresh installation, set
Rem the policy state to ENABLED (1).
DECLARE
  conid NUMBER := 0;
  ismig NUMBER := 0;
  stateid NUMBER := 1; -- ENABLED state
BEGIN
  SELECT sys_context('USERENV','CON_ID') INTO conid FROM sys.dual;

  IF (conid <= 1) THEN -- legacy or CDB$ROOT
    SELECT count(*) INTO ismig FROM sys.v$instance WHERE status = 'OPEN MIGRATE';
  ELSE -- PDB
    SELECT count(*) INTO ismig FROM sys.v$pdbs WHERE open_mode = 'MIGRATE' AND con_id = conid;
  END IF;

  IF (ismig > 0) THEN
    stateid := 3; -- PARTIAL state
  END IF;

  -- Oracle Account Management Controls
  BEGIN
    INSERT INTO DVSYS.POLICY$ (ID#,STATE)
    VALUES(1, stateid);
      EXCEPTION
      WHEN OTHERS THEN
        IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
        ELSE RAISE;
        END IF;
  END;
  -- Oracle System Protection Controls
  BEGIN
    INSERT INTO DVSYS.POLICY$ (ID#,STATE)
    VALUES(2, stateid);
      EXCEPTION
      WHEN OTHERS THEN
        IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
        ELSE RAISE;
        END IF;
  END;
END;
/

Rem
Rem
Rem
Rem    DESCRIPTION
Rem      Creates seed data for the policy_object$ table.
Rem 
Rem
Rem
Rem
Rem
----------------------------------------------------
--    Oracle Account Management Controls
----------------------------------------------------
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(1, 1, 1, 6);  -- Database Vault Account Management realm
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(2, 1, 2, 1);  -- CREATE USER command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(3, 1, 2, 2);  -- ALTER USER command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(4, 1, 2, 3);  -- DROP USER command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(5, 1, 2, 4);  -- CREATE PROFILE command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(6, 1, 2, 5);  -- ALTER PROFILE command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(7, 1, 2, 6);  -- DROP PROFILE command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(8, 1, 2, 11);  -- CHANGE PASSWORD command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

----------------------------------------------------
--    Oracle System Protection Controls
----------------------------------------------------
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(9, 2, 1, 7);  -- Oracle Enterprise Manager realm
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(10, 2, 1, 8);  -- Oracle Default Schema Protection Realm
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(11, 2, 1, 9);  -- Oracle System Privilege and Role Management Realm
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(12, 2, 1, 10);  -- Oracle Default Component Protection Realm
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/
BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(13, 2, 2, 12);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(14, 2, 2, 13);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(15, 2, 2, 14);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(16, 2, 2, 15);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(18, 2, 2, 17);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(19, 2, 2, 18);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(20, 2, 2, 19);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(21, 2, 2, 20);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(22, 2, 2, 21);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(23, 2, 2, 22);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(24, 2, 2, 23);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(25, 2, 2, 24);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO DVSYS.POLICY_OBJECT$ (ID#,POLICY_ID#,OBJECT_TYPE,OBJECT_ID#)
VALUES(26, 2, 2, 25);  -- ALTER SYSTEM command rule
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--Bug Fix 10225918 - Load English NLS seed data here instead of using dvca java modules.
BEGIN
    DVSYS.DBMS_MACADM.add_nls_data('ENGLISH');
END;
/

/* Bug 13584890 - Translation standard violation 
 * Remove ALLCAPS reserved key words from code.dlf file
 * and add them back here
*/
BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(1,'CREATE TABLE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(2,'INSERT','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(3,'SELECT','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(4,'CREATE CLUSTER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(5,'ALTER CLUSTER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(6,'UPDATE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(7,'DELETE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(8,'DROP CLUSTER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(9,'CREATE INDEX','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(10,'DROP INDEX','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(11,'ALTER INDEX','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(12,'DROP TABLE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(13,'CREATE SEQUENCE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(14,'ALTER SEQUENCE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(15,'ALTER TABLE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(16,'DROP SEQUENCE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(17,'GRANT','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(18,'REVOKE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(19,'CREATE SYNONYM','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(20,'DROP SYNONYM','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(21,'CREATE VIEW','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(22,'DROP VIEW','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(23,'VALIDATE INDEX','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(24,'CREATE PROCEDURE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(25,'ALTER PROCEDURE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(26,'LOCK TABLE','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(27,'NO OPERATION','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(28,'RENAME','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(29,'COMMENT','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(30,'AUDIT','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(31,'NOAUDIT','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(32,'CREATE DATABASE LINK','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(33,'DROP DATABASE LINK','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(34,'CREATE DATABASE','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(36,'CREATE ROLLBACK SEGMENT','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(37,'ALTER ROLLBACK SEGMENT','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(38,'DROP ROLLBACK SEGMENT','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(39,'CREATE TABLESPACE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(40,'ALTER TABLESPACE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(41,'DROP TABLESPACE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(42,'ALTER SESSION','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(43,'ALTER USER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(44,'COMMIT','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(45,'ROLLBACK','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(46,'SAVEPOINT','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(47,'EXECUTE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(48,'SET TRANSACTION','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(49,'ALTER SYSTEM','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(50,'EXPLAIN','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(51,'CREATE USER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(52,'CREATE ROLE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(53,'DROP USER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(54,'DROP ROLE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(55,'SET ROLE','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(56,'CREATE SCHEMA','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(57,'CREATE CONTROLFILE','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(58,'ALTER TRACING','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(59,'CREATE TRIGGER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(60,'ALTER TRIGGER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(61,'DROP TRIGGER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(62,'ANALYZE TABLE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(63,'ANALYZE INDEX','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(64,'ANALYZE CLUSTER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(65,'CREATE PROFILE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(66,'DROP PROFILE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(67,'ALTER PROFILE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(68,'DROP PROCEDURE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(70,'ALTER RESOURCE COST','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(71,'CREATE MATERIALIZED VIEW LOG','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(72,'ALTER MATERIALIZED VIEW LOG','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(73,'DROP MATERIALIZED VIEW LOG','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(74,'CREATE MATERIALIZED VIEW','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(75,'ALTER MATERIALIZED VIEW','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(76,'DROP MATERIALIZED VIEW','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(77,'CREATE TYPE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(78,'DROP TYPE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(79,'ALTER ROLE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(80,'ALTER TYPE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(81,'CREATE TYPE BODY','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(82,'ALTER TYPE BODY','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(83,'DROP TYPE BODY','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(84,'DROP LIBRARY','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(85,'TRUNCATE TABLE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(86,'TRUNCATE CLUSTER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(87,'CREATE BITMAPFILE','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(88,'ALTER VIEW','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(89,'DROP BITMAPFILE','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(90,'SET CONSTRAINTS','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(91,'CREATE FUNCTION','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(92,'ALTER FUNCTION','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(93,'DROP FUNCTION','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(94,'CREATE PACKAGE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(95,'ALTER PACKAGE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(96,'DROP PACKAGE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(97,'CREATE PACKAGE BODY','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(98,'ALTER PACKAGE BODY','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(99,'DROP PACKAGE BODY','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(157,'CREATE DIRECTORY','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(158,'DROP DIRECTORY','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(159,'CREATE LIBRARY','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(160,'CREATE JAVA','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(161,'ALTER JAVA','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(162,'DROP JAVA','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(163,'CREATE OPERATOR','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(164,'CREATE INDEXTYPE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(165,'DROP INDEXTYPE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(166,'ALTER INDEXTYPE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(167,'DROP OPERATOR','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(168,'ASSOCIATE STATISTICS','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(169,'DISASSOCIATE STATISTICS','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(170,'CALL','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(171,'CREATE SUMMARY','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(172,'ALTER SUMMARY','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(173,'DROP SUMMARY','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(174,'CREATE DIMENSION','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(175,'ALTER DIMENSION','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(176,'DROP DIMENSION','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(177,'CREATE CONTEXT','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(178,'DROP CONTEXT','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(179,'ALTER OUTLINE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(180,'CREATE OUTLINE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(181,'DROP OUTLINE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(183,'ALTER OPERATOR','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(187,'CREATE SPFILE','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(188,'CREATE PFILE','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(189,'MERGE','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(190,'CHANGE PASSWORD','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(191,'UPDATE JOIN INDEX','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(192,'ALTER SYNONYM','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(193,'ALTER DISKGROUP','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(194,'CREATE DISKGROUP','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(195,'DROP DISKGROUP','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(196,'ALTER LIBRARY','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(197,'PURGE RECYCLEBIN','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(198,'PURGE DBA_RECYCLEBIN','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(199,'PURGE TABLESPACE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(200,'PURGE TABLE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(201,'PURGE INDEX','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(202,'UNDROP OBJECT','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(203,'DROP DATABASE','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(204,'FLASHBACK DATABASE','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(205,'FLASHBACK TABLE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(206,'CREATE RESTORE POINT','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(207,'DROP RESTORE POINT','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(209,'DECLARE REWRITE EQUIVALENCE','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(210,'ALTER REWRITE EQUIVALENCE','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(211,'DROP REWRITE EQUIVALENCE','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(212,'CREATE EDITION','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(213,'ALTER EDITION','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(214,'DROP EDITION','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(218,'CREATE FLASHBACK ARCHIVE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(219,'ALTER FLASHBACK ARCHIVE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(220,'DROP FLASHBACK ARCHIVE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(225,'ALTER DATABASE LINK','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(226,'CREATE PLUGGABLE DATABASE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(227,'ALTER PLUGGABLE DATABASE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(228,'DROP PLUGGABLE DATABASE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(300,'CONNECT','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(490,'CLUSTER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(491,'CONSUMER GROUP','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(492,'CONTEXT','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(493,'DIMENSION','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(494,'DIRECTORY','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(495,'EVALUATION CONTEXT','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(496,'FUNCTION','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(497,'INDEX','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(498,'INDEX PARTITION','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(499,'INDEXTYPE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(500,'JAVA CLASS','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(501,'JAVA DATA','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(502,'JAVA RESOURCE','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(503,'JOB','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(504,'JOB CLASS','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(505,'LIBRARY','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(506,'LOB','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(507,'LOB PARTITION','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(508,'SNAPSHOT','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(509,'OPERATOR','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(510,'PACKAGE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(512,'PROCEDURE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(513,'PROGRAM','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(514,'QUEUE','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(515,'RESOURCE PLAN','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(516,'ROLE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(517,'RULE','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(518,'RULE SET','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(519,'SCHEDULE','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(520,'SEQUENCE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(521,'SYNONYM','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(522,'TABLE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(523,'TABLE PARTITION','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(524,'TRIGGER','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(525,'TYPE','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(528,'VIEW','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(529,'WINDOW','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(530,'WINDOW GROUP','','us') ;
--INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(531,'XML SCHEMA','','us') ;

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(532,'MATERIALIZED VIEW LOG','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/

BEGIN
INSERT INTO dvsys.code_t$(id#, value, description, language) VALUES(533,'MATERIALIZED VIEW','','us') ;
   EXCEPTION
   WHEN OTHERS THEN
     IF SQLCODE IN ( -00001) THEN NULL; --ignore unique constraint violation
     ELSE RAISE;
     END IF;
END;
/


commit;

@?/rdbms/admin/sqlsessend.sql

